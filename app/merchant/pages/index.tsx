import Head from "next/head";
import Card from "@/components/card";
import { useEffect, useState } from "react";
import BasicStatistics from "@/components/basicStats";
import { Box, Skeleton, SkeletonText } from "@chakra-ui/react";

const BASE = process.env.NEXT_PUBLIC_API_BASE_URL;

type User = {
  title: string;
  eventTitle: string;
  mint_account: string;
  status: string;
  userId: string;
};

export default function Home() {
  const [loading, setLoading] = useState<boolean>(true);
  const [events, setEvents] = useState<any>({});
  const [users, setUsers] = useState<User[]>([]);

  useEffect(() => {
    Promise.all([getEvents(), getAllRegistrations()]).then(([eventsRes, usersRes]) => {
      console.log(eventsRes);
      console.log(usersRes);
      setEvents(eventsRes);
      setUsers(usersRes);
      setLoading(false);
    });
  }, []);

  async function getEvents() {
    const res = await fetch(BASE + "/viewEvents");
    const data = await res.json();
    return data;
  }

  async function getAllRegistrations() {
    const res = await fetch(BASE + `/getAllRegistrations`);
    const data = await res.json();
    return data;
  }

  function calculateRevenue() {
    let totalRevenue = 0;
    users.forEach(user => {
      events.forEach((event: { title: any; price: number; }) => {
        if (event.title === user.eventTitle) {
          totalRevenue += event.price;
        }
      });
    });
    return totalRevenue;
  }

  function generateCards(events: any[]) {
    return events.map((event, i) => (
      <div key={i} className="m-2">
        <Card
          key={i}
          title={event.title}
          description={event.description}
          price={event.price}
          time={event.time}
          venue={event.venue}
          capacity={event.capacity}
          symbol={event.symbol}
          eventType={event.eventType}
          imageCID={event.imageCID}
        />
      </div>
    ));
  }

  function generateLoadingCards() {
    const loadingCards: JSX.Element[] = [];
    for (let i = 0; i < 4; i++) {
      loadingCards.push(
        <Box key={i} margin={4} padding="2" boxShadow="lg" bg="white" width={80}>
          <Skeleton height={48} />
          <SkeletonText mt="4" noOfLines={8} spacing="4" skeletonHeight="4" />
        </Box>
      );
    }
    return loadingCards;
  }

  const cardSection = (body: JSX.Element[]) => (
    <div className="flex flex-wrap justify-center m-4">{body}</div>
  );

  return (
    <>
      <Head>
        <title>Merchant Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <BasicStatistics
          events={{
            "Total Events": events.length,
            "NFTs Minted": String(
              users.filter((user: { status: string; }) => user.status === "SUCCESSFUL").length
            ),
            "Revenue": "$" + calculateRevenue(),
          }}
        />
        {loading ? cardSection(generateLoadingCards()) : cardSection(generateCards(events))}
      </main>
    </>
  );
}
